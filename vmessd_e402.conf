//
// SSD DAQ configuration file for E404 April 2016
//

// ------ V830 --------

v830_n_scalers = 16          // number of scaler channels to read. should be >=3.

// ------ V1190 --------

v1190_n_modules = 1        // number of V1190A moudles
v1190_modules[0] = 0       // used module
v1190_geo[0] = 24           // geometical address

// The parameters of the each module can be specified independently
// by using [], e.g. 'v1190_detection[2] = both' for module #2

//v1190_match_window_width = 5000      // from 1 to 4095 (used up for CAGRA 2015.7.2)
//v1190_window_offset = -4000          // (used up to 2015.6.10 20:15)

v1190_match_window_width = 3000      // for E404 on 16/04/14
v1190_window_offset = -2280          // for E404 on 16/04/14

v1190_extra_search_window_width = 0  // no greater than 50
v1190_reject_margin = 100            // should be >= 1
v1190_detection = both               // For E404 April 2016
v1190_almost_full_level = 8192       // 16384 words = a half of the memory 
v1190_max_number_hits_w = 9          // maximum number of hits of TDC for a trigger used from 2015.6.20 19:52*/
v1190_trigger_time_subtraction = true  // true or false


// ------ MADC32 --------

madc32_n_modules  = 2
madc32_modules[0] = 0       // used modules
madc32_modules[1] = 1       // 
madc32_module_id[0] = 0     // module ID
madc32_module_id[1] = 1     // 


// The parameters of the each module can be specified independently
// by using [], e.g. 'madc32_width[2] = 30' is adapted for module #2

madc32_multi_event = unlimited        // none, limited, or unlimited
//madc32_marking_type = time_stamp      // event_counter, time_stamp, or extended_time_stamp
madc32_marking_type = event_counter     // event_counter, time_stamp, or extended_time_stamp
madc32_adc_resolution = 4khigh        // 2k, 4k, 4khigh, 8k, or 8khigh
madc32_delay0 = 0                     // 0=25nsec, 1=150nsec, then 50 nsec step after
madc32_delay1 = 0                     // 0=25nsec, 1=150nsec, then 50 nsec step after
madc32_width0 = 40                    // multiple of 50 nsec
madc32_width1 = 40                    // multiple of 50 nsec
madc32_use_gg = gg0                   // gg0 or gg1
madc32_input_range = 10V              // 4V, 8V, or 10V
madc32_nim_gat1_osc = oscillator      // gate1 or oscillator
madc32_nim_fc_reset = fast_clear      // fast_clear or time_stamp
//madc32_nim_busy = gg0           // busy, gg0, gg1, cubs, full, or threshold
madc32_nim_busy = threshold           // busy, gg0, gg1, cubs, full, or threshold
madc32_ts_sources = external           // internal or external
madc32_ts_sources_ext_reset_enable = disable  // enable or disable
madc32_threshold = 0                  // threshold of all the channels

